/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.network.advertisementEnterprise.supervisorOrganization;

import biz.account.Account;
import biz.ad.Ad;
import biz.ad.AdCatalog;
import biz.enterprises.Enterprise;
import biz.role.supervisorRole.ADCompanySupervisorRole;
import java.util.stream.Stream;
import ui.components.HasTitle;
import ui.components.TablePopulatable;

import javax.swing.*;
import ui.components.ParentUI;
/**
 *
 * @author royn
 */
public class CensorAdvertisements extends javax.swing.JPanel implements TablePopulatable<Ad>,HasTitle{
    private ParentUI parent;
    private Account account;

    /**
     * Creates new form AdvertisementSensorVideos
     */
    public CensorAdvertisements(ParentUI parent, Account account) {
        this.parent = parent;
        this.account = account;
        initComponents();
        populateTable();
        txtDescription.setEnabled(false);
        txtDescription.setLineWrap(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        btnApprove = new javax.swing.JButton();
        btnDeny = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title", "Producer", "Type", "Create at"
            }
        ));
        jScrollPane1.setViewportView(tbl);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane3.setViewportView(txtDescription);

        btnApprove.setText("Approve Selected");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnDeny.setText("Deny Selected");
        btnDeny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDenyActionPerformed(evt);
            }
        });

        btnView.setText("Watch Selected >>");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel1.setText("Selected Description");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(btnApprove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeny, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApprove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeny)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnView)
                .addContainerGap())
            .addComponent(jScrollPane1)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        Ad selected = getSelected();
        if (selected == null) {
            return;
        }

        if (account.getRole() instanceof ADCompanySupervisorRole) {
            selected.setStatus(Ad.AdStatus.ESApproved);
        } else {
            selected.setStatus(Ad.AdStatus.NSApproved);
        }
        JOptionPane.showMessageDialog(this, "Ad Approved!");
        populateTable();
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnDenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDenyActionPerformed
        Ad selected = getSelected();
        if (selected == null) {
            return;
        }
        selected.setStatus(Ad.AdStatus.Banned);
        JOptionPane.showMessageDialog(this, "Ad Banned!");
        populateTable();
    }//GEN-LAST:event_btnDenyActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        Ad selected = getSelected();
        if (selected == null) {
            return;
        }
        parent.pushComponent(new WatchAd(parent, selected, account));
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnDeny;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbl;
    private javax.swing.JTextArea txtDescription;
    // End of variables declaration//GEN-END:variables

    @Override
    public JTable getTable() {
        return tbl;
    }

    @Override
    public Object[] populateRow(Ad ad) {
        return new Object[] {
            ad,
            ad.getProducer(),
            ad.getType(),
            ad.getCreatedAt().getTime(),
        };
    }

    @Override
    public void populateTable() {
        txtDescription.setText("");
        Enterprise ent = account.getOrg().getEnterprise();
        AdCatalog adlg = ent.getNetwork().getAdCatalog();
        Stream<Ad> s = adlg.getAdArrayList().stream();
        if (account.getRole() instanceof ADCompanySupervisorRole) {
            s = s.filter(a -> a.getProducer().getOrg().getEnterprise().equals(ent) && a.getStatus().equals(Ad.AdStatus.Produced));
        } else {
            s = s.filter(a -> a.getStatus().equals(Ad.AdStatus.ESApproved));
        }
        populateTable(s);
    }

    @Override
    public String getTitle() {
        if (account.getRole() instanceof ADCompanySupervisorRole) {
            return String.format("Uploaded Advertisements in %s", account.getOrg().getEnterprise());
        } else {
            return String.format("Uploaded Advertisements in %s", account.getOrg().getEnterprise().getNetwork());
        }
    }
}
